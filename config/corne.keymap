/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    behaviors {
        tp: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        pht: positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <1>;    // <---[[the W key]]
        };
        lt_impl: layer-tap-by-hold-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_BY_HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&mo>, <&kp>;
        };
    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// ----------------------------------------------------------------------------------------------
// |  TAB     |  Q  |  W  |  E  |  R      |  T       |   |  Y        |  U   |  I  |  O  |  P  |  -  |
// | ESC/CTRL |  A  |  S  |  D  |  F      |  G       |   |  H        |  J   |  K  |  L  |  ;  |  '  |
// | SHFT     |  Z  |  X  |  C  |  V      |  B       |   |  N        |  M   |  ,  |  .  |  /  |  }  |
//                        | LWR | ESC/ALT | BSPC/GUI |   | SHFT | SPC  | ENT/RSE |
                        bindings = <
   &kp TAB        &kp Q &kp W &kp E &kp R &kp T    &kp Y &kp U  &kp I     &kp O   &kp P    &kp MINUS
   &pht LCTRL ESC &kp A &kp S &kp D &kp F &kp G    &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT      &kp Z &kp X &kp C &kp V &kp B    &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RBRC
          &mo 1  &pht LALT ESC  &pht LGUI BSPC     &kp LSHFT  &kp SPACE  &lt 2 RET
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL  |
// | CTRL |     |     |     |     |     |   | LFT | DWN |  UP | RGT |     | BSPC |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    |     | GUI | SPC |   | ENT | ALT |     |
                        bindings = <
   &kp TAB   &kp N1 &kp N2 &kp N3 &kp N4 &kp N5    &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp DEL
   &kp LCTRL &trans &trans &trans &trans &trans    &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &kp BSPC
   &kp LSHFT &trans &trans &trans &trans &trans    &trans   &trans   &trans &trans    &trans &trans
                    &trans  &kp LGUI  &kp SPACE    &kp RET  &kp RALT  &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  `  |  [  |  ]  | "|"  |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |  _  |  +  |  ~  |  {  |  }  |  \   |
//                    |     | GUI | SPC |   | ENT | ALT |     |
                        bindings = <
   &kp TAB    &kp EXCL     &kp AT       &kp HASH     &kp DLLR     &kp PRCNT       &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL  &trans       &trans       &trans       &trans       &trans          &kp MINUS &kp EQUAL &kp GRAVE &kp LBKT &kp RBKT &kp PIPE
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4    &kp UNDER &kp PLUS  &kp TILDE &kp LBRC &kp RBRC &kp BSLH
                                                &trans  &kp LGUI  &kp SPACE       &kp RET  &kp RALT  &trans
                        >;
                };
        };
};
